[versions]
ktorVersion="2.2.4"
kotlinVersion="1.8.10"
kotlinCoroutinesVersion="1.6.4"
kotlinSerializationVersion="1.5.1"
logbackVersion="1.2.11"
exposedVersion="0.41.1"
prometheusVersion="1.6.3"
koinCoreVersion="3.3.3"
koinKtorVersion="3.3.1"
koinSlf4jVersion="3.3.1"
spotlessVersion="6.16.0"
ktfmtVersion="0.43"
kafkaLibVersion="3.4.0"
kotlinxDateTimeVersion="0.4.0"
pulsarClientVersion="3.0.0"

[libraries]
kotlinCore = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlinVersion" }
kotlinCoroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm", version.ref = "kotlinCoroutinesVersion"}
kotlinSerializationCbor = { module = "org.jetbrains.kotlinx:kotlinx-serialization-cbor-jvm", version.ref = "kotlinSerializationVersion" }
kotlinSerializationJson = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json-jvm", version.ref = "kotlinSerializationVersion" }

ktorSerialization =  { module = "io.ktor:ktor-serialization-kotlinx-json-jvm", version.ref = "ktorVersion"}

ktorServerCore =  { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktorVersion"}
ktorServerContentNegotiation =  { module = "io.ktor:ktor-server-content-negotiation-jvm", version.ref = "ktorVersion"}
ktorServerCallLogging =  { module = "io.ktor:ktor-server-call-logging-jvm", version.ref = "ktorVersion"}
ktorServerCallId =  { module = "io.ktor:ktor-server-call-id-jvm", version.ref = "ktorVersion"}
ktorServerMetrics =  { module = "io.ktor:ktor-server-metrics-jvm", version.ref = "ktorVersion"}
ktorServerMetricsMicrometer =  { module = "io.ktor:ktor-server-metrics-micrometer-jvm", version.ref = "ktorVersion"}
ktorServerResources =  { module = "io.ktor:ktor-server-resources", version.ref = "ktorVersion"}
ktorServerSwagger =  { module = "io.ktor:ktor-server-swagger", version.ref = "ktorVersion"}
ktorServerOpenAPI =  { module = "io.ktor:ktor-server-openapi", version.ref = "ktorVersion"}
ktorServerCompression =  { module = "io.ktor:ktor-server-compression-jvm", version.ref = "ktorVersion"}
ktorServerNetty =  { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktorVersion"}
ktorServerForwardedHeader =  { module = "io.ktor:ktor-server-forwarded-header", version.ref = "ktorVersion"}

micrometerPrometheus = { module = "io.micrometer:micrometer-registry-prometheus", version.ref = "prometheusVersion" }

logback = { module = "ch.qos.logback:logback-classic", version.ref = "logbackVersion" }

exposedCore =  { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposedVersion"}
exposedJdbc =  { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposedVersion"}

koinKtor =  { module = "io.insert-koin:koin-ktor", version.ref = "koinKtorVersion"}
koinCore =  { module = "io.insert-koin:koin-core", version.ref = "koinCoreVersion"}
koinSlf4j =  { module = "io.insert-koin:koin-logger-slf4j", version.ref = "koinSlf4jVersion"}

ktorServerTests =  { module = "io.ktor:ktor-server-tests-jvm", version.ref = "ktorVersion"}
kotlinJunit =  { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlinVersion"}

kafkaClients =  { module = "org.apache.kafka:kafka-clients", version.ref = "kafkaLibVersion"}

kotlinxDateTime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDateTimeVersion" }

pulsarClient = { module = "org.apache.pulsar:pulsar-client", version.ref = "pulsarClientVersion" }

[plugins]
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlinVersion"}
ktor = { id = "io.ktor.plugin", version.ref = "ktorVersion" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlinVersion" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotlessVersion" }

[bundles]
ktorCore = ["ktorServerCore", "ktorServerNetty", "ktorSerialization"]
ktorUtil = [
    "ktorServerForwardedHeader",
    "ktorServerContentNegotiation",
    "ktorServerResources",
    "ktorServerCallLogging",
    "ktorServerCallId",
    "ktorServerCompression",
    "logback"
]
ktorMetrics = ["ktorServerMetrics", "ktorServerMetricsMicrometer", "micrometerPrometheus"]
exposed = ["exposedCore", "exposedJdbc"]
